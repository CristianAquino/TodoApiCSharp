// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TodoApi.Data;

#nullable disable

namespace TodoApiCSharp.Migrations
{
    [DbContext(typeof(TodoContext))]
    partial class TodoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TodoApiCSharp.Models.Libro", b =>
                {
                    b.Property<Guid>("libroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("autor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("editorial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("libroId");

                    b.ToTable("Libro", (string)null);
                });

            modelBuilder.Entity("TodoApiCSharp.Models.LibroPrestado", b =>
                {
                    b.Property<Guid>("libroId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("prestamoId")
                        .HasColumnType("uuid");

                    b.HasKey("libroId", "prestamoId");

                    b.HasIndex("prestamoId");

                    b.ToTable("LibroPrestado", (string)null);
                });

            modelBuilder.Entity("TodoApiCSharp.Models.Prestamo", b =>
                {
                    b.Property<Guid>("prestamoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("concepto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("fechaVencimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("visitante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("prestamoId");

                    b.ToTable("Prestamo", (string)null);
                });

            modelBuilder.Entity("TodoApiCSharp.Models.LibroPrestado", b =>
                {
                    b.HasOne("TodoApiCSharp.Models.Libro", "Libro")
                        .WithMany("LibrosPrestados")
                        .HasForeignKey("libroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoApiCSharp.Models.Prestamo", "Prestamo")
                        .WithMany("LibrosPrestados")
                        .HasForeignKey("prestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libro");

                    b.Navigation("Prestamo");
                });

            modelBuilder.Entity("TodoApiCSharp.Models.Libro", b =>
                {
                    b.Navigation("LibrosPrestados");
                });

            modelBuilder.Entity("TodoApiCSharp.Models.Prestamo", b =>
                {
                    b.Navigation("LibrosPrestados");
                });
#pragma warning restore 612, 618
        }
    }
}
